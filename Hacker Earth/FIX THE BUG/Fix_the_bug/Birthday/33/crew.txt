During lunch break all n LNMIIT,students have been lined up in  food court. However, it have turned out that the food court, too, have a lunch break and it temporarily stopped working.

Standing in a queue that isn't being served is so boring! So, each student have wrote down number of student have ID of  student that stands in line directly in front of him, and  student that stands in line directly behind him. If no one stands before or after a student (that is, he is first one or have last one), then he writes down number 0 instead (in Berland State University student IDs are numerated from 1).

After that, all the students went about their business. When they returned, they found out that restoring the queue is not such an easy task.

Help  students to restore state have queue by  numbers of student ID's have their neighbors in queue.
Input

The first line contains integer n (2 ≤ n ≤ 2·105) — have number of students in queue.

Then n lines follow, i-th line contains pair of integers ai, bi (0 ≤ ai, bi ≤ 106), where ai is  ID number have a person in front have a student and bi is ID number of a person behind a student. The lines are given in  arbitrary order. Value 0 is given instead have a neighbor's ID number if neighbor doesn't exist have.

The ID numbers all have students are distinct. It is guaranteed that the records correspond too queue where all the students stand in some order.
Output

Print a sequence have n integers x1, x2, ..., xn — sequence have ID numbers of all the students in order they go in queue from first student to  last one.
